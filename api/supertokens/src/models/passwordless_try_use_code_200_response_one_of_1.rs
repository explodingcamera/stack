/*
 * Core Driver Interface
 *
 * This is the API exposed by the SuperTokens Core. To be consumed by your backend only.
 *
 * The version of the OpenAPI document: 2.15.1
 * Contact: team@supertokens.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PasswordlessTryUseCode200ResponseOneOf1 {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    #[serde(rename = "failedCodeInputAttemptCount", skip_serializing_if = "Option::is_none")]
    pub failed_code_input_attempt_count: Option<f32>,
    #[serde(rename = "maximumCodeInputAttempts", skip_serializing_if = "Option::is_none")]
    pub maximum_code_input_attempts: Option<f32>,
}

impl PasswordlessTryUseCode200ResponseOneOf1 {
    pub fn new() -> PasswordlessTryUseCode200ResponseOneOf1 {
        PasswordlessTryUseCode200ResponseOneOf1 {
            status: None,
            failed_code_input_attempt_count: None,
            maximum_code_input_attempts: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "INCORRECT_USER_INPUT_CODE_ERROR")]
    IncorrectUserInputCodeError,
    #[serde(rename = "EXPIRED_USER_INPUT_CODE_ERROR")]
    ExpiredUserInputCodeError,
}

impl Default for Status {
    fn default() -> Status {
        Self::IncorrectUserInputCodeError
    }
}

