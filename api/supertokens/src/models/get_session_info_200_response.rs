/*
 * Core Driver Interface
 *
 * This is the API exposed by the SuperTokens Core. To be consumed by your backend only.
 *
 * The version of the OpenAPI document: 2.15.1
 * Contact: team@supertokens.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetSessionInfo200Response {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::UnauthorisedResponse>,
    /// should be a JSON object (not a JSON literal nor an array)
    #[serde(rename = "userDataInDatabase", skip_serializing_if = "Option::is_none")]
    pub user_data_in_database: Option<serde_json::Value>,
    /// should be a JSON object (not a JSON literal nor an array)
    #[serde(rename = "userDataInJWT", skip_serializing_if = "Option::is_none")]
    pub user_data_in_jwt: Option<serde_json::Value>,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "expiry", skip_serializing_if = "Option::is_none")]
    pub expiry: Option<f32>,
    #[serde(rename = "timeCreated", skip_serializing_if = "Option::is_none")]
    pub time_created: Option<f32>,
    #[serde(rename = "sessionHandle", skip_serializing_if = "Option::is_none")]
    pub session_handle: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl GetSessionInfo200Response {
    pub fn new() -> GetSessionInfo200Response {
        GetSessionInfo200Response {
            status: None,
            user_data_in_database: None,
            user_data_in_jwt: None,
            user_id: None,
            expiry: None,
            time_created: None,
            session_handle: None,
            message: None,
        }
    }
}


